global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'

endglobal

snippet templ "Basic template" b
\documentclass[12pt]{article}
\usepackage[english]{babel}
\usepackage{amsmath,amsthm,amssymb,scrextend}
\usepackage{fancyhdr}
\usepackage[utf8]{inputenc}
\pagestyle{fancy}

\newtheorem{problem}{Problem}

\lhead{${1}}
\chead{Ellen Xu}
\rhead{`date +%d\ %b\ %Y`}

\begin{document}
	$0
\end{document}
endsnippet

snippet problem "Problem" b
\begin{problem} 
	$1
\end{problem}

\begin{proof}
	$2
\end{proof}
endsnippet

snippet algo "Algo" b
\begin{algo}[ht]
  \caption{$1}
\begin{algorithmic}[1]
    \State \textbf{Input:} $2
    \State \textbf{Output:} $3
    \State \textbf{Model:} $4
    \State \textbf{Loss:} $5
\end{algorithmic}
\end{algo}
endsnippet

snippet today "Date"
`date +%F`
endsnippet

snippet beg "Environment" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet _ "auto subscript {}" Ai
_{$1}$2
endsnippet

context "math()"
snippet ^ "auto superscript {}" Ai
^{$1}$2
endsnippet

context "math()"
snippet frac "fraction" w
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

snippet fig "Insert figure environment"
\begin{figure}[h]
	\centering
	\includegraphics[width=${1:0.75}\linewidth]{${2}}
	\label{fig:${3}}
\end{figure}
endsnippet

snippet mk "Make equation" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Display mode" wA
\[
${1:${VISUAL}}
.\] $0
endsnippet

context "math()"
snippet => "implies" Ai
\implies
endsnippet

context "math()"
snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

context "math()"
snippet <= "leq" Ai
\leq 
endsnippet

context "math()"
snippet >= "geq" Ai
\ge 
endsnippet

context "math()"
snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet set "{}" w
\\{ $1 \\} $0
endsnippet

context "math()"
snippet lr( "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet cup "cup" w
\cup_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet cap "cap" w
\cap_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 300
context "math()"
snippet int "integral" w
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0 dx
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 100
context "math()"
snippet <- "leftarrow" iA
\leftarrow
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow 
endsnippet

context "math()"
snippet >> ">>" iA
\gg 
endsnippet

context "math()"
snippet << "<<" iA
\ll 
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet OO "emptyset" iA
\O
endsnippet

context "math()"
snippet RR "real" iA
\R
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet NN "n" iA
\N
endsnippet

context "math()"
snippet ZZ "Z" iA
\Z
endsnippet

context "math()"
snippet CC "C" iA
\C
endsnippet

context "math()"
snippet UU "cup" iA
\cup
endsnippet

context "math()"
snippet te "text" wA
\text\{$1\}$0
endsnippet

context "math()"
snippet finv "inverse" wA
f^{-1}
endsnippet

context "math()"
snippet +- "pm" wA
\pm
endsnippet
